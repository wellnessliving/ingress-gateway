include /etc/nginx/server-vars-conf/server_vars.conf;

rewrite_by_lua_file /etc/nginx/custom-lua-scripts/global-functions.lua;

if ($host ~ ^wl-s.net$) {
    rewrite ^/(.*)$ https://$redir_domain/mu-$1 redirect;
}
if ($host ~ ^redir.wellnessliving.com$) {
    return 301 https://$redir_domain$request_uri;
}
if ($scheme = http) {
    return 301 https://$host$request_uri;
}

# alien part ------------------------------------------------------------------------
location ~ ^/employee-policy-acknowledgement/?$ {
    return 301 https://my.tugboatlogic.com/org/15200/training?$args;
}

# wellnessliving.com part ------------------------------------------------------------------------
location ~* "/" {
    access_by_lua_file /etc/nginx/dispatcher-lua-scripts/rewrite_dispatcher.lua;
    proxy_set_header X-Host "$http_host";
    proxy_set_header Host "$downpage_demo_domain";
    proxy_pass http://${downpage_demo_domain};
}

#------------------------------------------------------------------------

error_page 400 401 403 404 408 429 500 502 503 504 507 @error_page;
location @error_page {
    access_by_lua_block {
        handle_error()
    }
    proxy_http_version 1.1;
    proxy_pass $proxy_pass_url;
}

location @thoth {
    proxy_http_version 1.1;
    proxy_pass $proxy_pass_url$request_uri;
    #proxy_set_header Host staging-knowledge-sharing.wellnessliving.com;
    add_header X-Debug TRUE;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Wl-Root-Uri \"/explore/\";
    proxy_set_header Wl-Subdomain \"ds\";
    more_clear_headers "X-Server";
}

location @knowledge_sharing_redirect {
    internal;
    #return 200 "Reached knowledge_sharing_redirect";
    access_by_lua_block {
        return redirect_to_service(string.format("http://%s", ngx.var.knowledge_domain),ngx.var.main_domain,ngx.var.http_host,"@thoth")
    }
}

location @explorer_handler {
    internal;
    access_by_lua_block {
        return redirect_to_service(string.format("https://%s", ngx.var.explorer_domain),ngx.var.explorer_domain,ngx.var.http_host,"@thoth")
    }
}
